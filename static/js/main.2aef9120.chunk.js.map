{"version":3,"sources":["components/Step1.js","components/Step2.js","utils/draw.js","components/Draw.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Step1","props","style","fontSize","background","onChange","e","setTotal","target","value","Array","fill","map","index","key","type","marginTop","onClick","setStep","Step2","attendee","maxHeight","overflow","element","marginBottom","name","obj","console","log","event","setAttendee","o","marginRight","setStarted","shuffle","arr","newArray","i","length","randomIndex","Math","floor","random","checkifsame","old","some","draw","users","flag","Draw","ATTENDEE_INIT_STATE","id","match","isFinished","useState","showResult","setShowResult","attendeeList","setAttendeeList","activeAttendee","setActiveAttendee","useEffect","drawResult","getDrawResult","titleStyle","maxWidth","margin","find","every","getNextAttendee","next","findIndex","Main","total","step","isStarted","handleSetStep","Number","_","height","display","textAlign","flexDirection","justifyContent","width","App","className","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2aef9120.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Step1 (props) {\n\n\treturn (\n\t\t<>\n\t\t\t<p>請輸入參加人數</p>\n\t\t\t<div>\n\t\t\t\t<select\n\t\t\t\t\tstyle={{ fontSize: '28px', background: 'transparent' }}\n\t\t\t\t\tonChange={(e) => props.setTotal(e.target.value)}>\n\t\t\t\t\t{\n\t\t\t\t\t\tnew Array(29).fill(null)\n\t\t\t\t\t\t.map((e, index) => (\n\t\t\t\t\t\t\t<option key={index} value={index+2}>{index+2}</option>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</select>\n\t\t\t\t{/* <input type=\"number\" onChange={(e) => props.setTotal(e.target.value)}></input> */}\n\t\t\t\t人\n\t\t\t</div>\n\t\t\t<button type=\"button\"\n\t\t\t\tstyle={{ marginTop: '50px' }}\n\t\t\t\tonClick={() => props.setStep(2)}>確定</button>\n\t\t</>\n\t)\n}\n\nexport default Step1;","import React from 'react';\n\nfunction Step2 (props) {\n\n\tconst attendee = props.attendee\n\n\tfunction handleChange(obj) {\n\t\tconsole.log('obj', obj)\n\t\treturn (event) => props.setAttendee(attendee.map((o) => {\n\t\t\tif (o === obj) return {...obj, name: event.target.value}\n\t\t\treturn o;\n\t\t}));\n\t}\n\n\tconst listStyle = {\n\t\tmaxHeight: '250px',\n\t\toverflow: 'auto'\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<p>寫上名字</p>\n\t\t\t<div style={listStyle}>\n\t\t\t\t{props.attendee.map((element, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={index}>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tstyle={{ marginBottom: '8px' }}\n\t\t\t\t\t\t\t\tvalue={element.name}\n\t\t\t\t\t\t\t\tonChange={handleChange(element)}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t)}\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<button\n\t\t\t\t\tstyle={{ marginRight: '10px' }}\n\t\t\t\t\tonClick={() => props.setStep(1)}>返回</button>\n\t\t\t\t<button type=\"button\"\n\t\t\t\t\tstyle={{ marginTop: '50px' }}\n\t\t\t\t\tonClick={() => props.setStarted(true)}>設定完成</button>\n\t\t\t</div>\n\n\t\t</>\n\t)\n}\n\nexport default Step2;","// const getNewIndex = (index, length) => {\n// \tlet randomIndex = Math.floor(Math.random() * (length - 1))\n// \treturn randomIndex >= index ? randomIndex + 1 : randomIndex\n// }\n\nconst shuffle = (arr) => {\n\tconst newArray = [...arr]\n\n\tfor (let i = arr.length - 1; i >= 0; i--) {\n\t\tlet randomIndex = Math.floor(Math.random() * (arr.length - 1));\n\t\t[newArray[i], newArray[randomIndex]] = [newArray[randomIndex], newArray[i]]\n\t}\n\n\treturn newArray\n}\n\nconst checkifsame = (old, newArray) => {\n\treturn newArray.some((e, index) => e === old[index])\n}\n\nexport const draw = (users) => {\n\tlet flag = true\n\tlet newArray\n\n\twhile(flag) {\n\t\tnewArray = shuffle(users)\n\t\tflag = checkifsame(users, newArray)\n\t}\n\treturn newArray\n}\n","import React, { useState, useEffect } from 'react';\n\nimport { draw as getDrawResult } from '../utils/draw'\n\nfunction Draw (props) {\n\n\tconst ATTENDEE_INIT_STATE = {\n\t\tid: 1,\n\t\tname: '',\n\t\tmatch: 3,\n\t\tisFinished: false\n\t}\n\n\tconst [showResult, setShowResult] = useState(false);\n\tconst [attendeeList, setAttendeeList] = useState([ATTENDEE_INIT_STATE])\n\tconst [activeAttendee, setActiveAttendee] = useState(ATTENDEE_INIT_STATE);\n\n\tconst getRandomIndex = (length) => {\n\t\treturn Math.floor(Math.random() * length)\n\t}\n\n\tuseEffect(() => {\n\n\t\tconst drawResult = getDrawResult(props.attendee.map(e => e.id))\n\t\tconst attendee = props.attendee.map((e, index) => (\n\t\t\t{\n\t\t\t\t...e,\n\t\t\t\tmatch: drawResult[index],\n\t\t\t\tisFinished: false\n\t\t\t}\n\t\t))\n\t\tsetAttendeeList(attendee)\n\t\tsetActiveAttendee(attendee[getRandomIndex(attendee.length)])\n\n\t}, [props.attendee]);\n\n\tfunction isAllFinished() {\n\t\treturn attendeeList.every(e => e.isFinished)\n\t}\n\n\tconst draw = () => {\n\t\tsetShowResult(true)\n\t\tconst index = attendeeList.findIndex(e => e.id === activeAttendee.id)\n\t\tattendeeList[index].isFinished = true\n\t}\n\n\tconst next = () => {\n\t\tconst getNextAttendee = attendeeList.find(e => e.id === activeAttendee.match)\n\t\tsetActiveAttendee({\n\t\t\t...getNextAttendee\n\t\t})\n\t\tsetShowResult(false)\n\t}\n\n\tconst titleStyle = {\n\t\tmaxWidth: '300px',\n    margin: '0 auto 1em'\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{\n\t\t\t\t!showResult ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p style={titleStyle}>請 {activeAttendee.name} 抽獎</p>\n\t\t\t\t\t\t<button type=\"button\" onClick={() => draw()}>開始抽獎</button>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p style={titleStyle}>恭喜 {activeAttendee.name} 抽到的是</p>\n\t\t\t\t\t\t<h2>{attendeeList.find(e => e.id === activeAttendee.match).name}</h2>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tisAllFinished() ? (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<p>抽完囉</p>\n\t\t\t\t\t\t\t\t\t<button>查看結果</button>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<button type=\"button\" onClick={() => next()}>下一位</button>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\n\t\t</>\n\t)\n}\n\nexport default Draw;","import React, { useState } from 'react';\nimport Step1 from './Step1'\nimport Step2 from './Step2'\nimport Draw from './Draw'\n\n// container\nfunction Main () {\n\n\tconst [total, setTotal] = useState(2);\n\tconst [step, setStep] = useState(1);\n\tconst [isStarted, setStarted] = useState(false);\n\tconst [attendee, setAttendee] = useState([{id: 1, name: '1號'}]);\n\n\tconst handleSetStep = (step) => {\n\t\tif (step === 2) {\n\t\t\tlet arr = Array(Number(total)).fill({})\n\t\t\tsetAttendee(\n\t\t\t\tarr.map((_, index) => ({\n\t\t\t\t\tid: `${index + 1}`,\n\t\t\t\t\tname: `${index + 1} 號`\n\t\t\t\t}))\n\t\t\t)\n\t\t}\n\t\tsetStep(step)\n\t}\n\n\tconst containerStyle = {\n\t\theight: 'calc(100vh - 150px)',\n    display: 'flex',\n    textAlign: 'center',\n    flexDirection: 'column',\n\t\tjustifyContent: 'center',\n\t\twidth: '100%'\n\t}\n\n\treturn (\n    <div style={containerStyle}>\n\t\t\t{\n\t\t\t\t!isStarted ? (\n\t\t\t\t\tstep === 1 ? (\n\t\t\t\t\t\t<Step1 total={total} setTotal={setTotal} setStep={handleSetStep}/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Step2\n\t\t\t\t\t\t\tattendee={attendee}\n\t\t\t\t\t\t\tsetStarted={setStarted}\n\t\t\t\t\t\t\tsetAttendee={setAttendee}\n\t\t\t\t\t\t\tsetStep={handleSetStep}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t) : (\n\t\t\t\t\t<Draw attendee={attendee} />\n\t\t\t\t)\n\t\t\t}\n    </div>\n  );\n}\n\nexport default Main","import React from 'react';\nimport './App.css';\n\nimport Main from './components/Main'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        抽交換禮物程式喔喔喔\n      </header>\n\n      <Main />\n\n      <footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}